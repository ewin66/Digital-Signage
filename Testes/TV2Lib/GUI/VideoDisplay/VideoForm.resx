<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAICAAAAAACACoCAAANgAAACAgEAAAAAQA6AIAAN4IAAAQEBAAAAAEACgBAADGCwAAKAAAACAA
        AABAAAAAAQAIAAAAAAAABAAAAAAAAAAAAAAAAQAAAAEAAAAAAAAAAIAAAIAAAACAgACAAAAAgACAAICA
        AADAwMAAwNzAAPDKpgAEBAQACAgIAAwMDAAREREAFhYWABwcHAAiIiIAKSkpAFVVVQBNTU0AQkJCADk5
        OQCAfP8AUFD/AJMA1gD/7MwAxtbvANbn5wCQqa0AAAAzAAAAZgAAAJkAAADMAAAzAAAAMzMAADNmAAAz
        mQAAM8wAADP/AABmAAAAZjMAAGZmAABmmQAAZswAAGb/AACZAAAAmTMAAJlmAACZmQAAmcwAAJn/AADM
        AAAAzDMAAMxmAADMmQAAzMwAAMz/AAD/ZgAA/5kAAP/MADMAAAAzADMAMwBmADMAmQAzAMwAMwD/ADMz
        AAAzMzMAMzNmADMzmQAzM8wAMzP/ADNmAAAzZjMAM2ZmADNmmQAzZswAM2b/ADOZAAAzmTMAM5lmADOZ
        mQAzmcwAM5n/ADPMAAAzzDMAM8xmADPMmQAzzMwAM8z/ADP/MwAz/2YAM/+ZADP/zAAz//8AZgAAAGYA
        MwBmAGYAZgCZAGYAzABmAP8AZjMAAGYzMwBmM2YAZjOZAGYzzABmM/8AZmYAAGZmMwBmZmYAZmaZAGZm
        zABmmQAAZpkzAGaZZgBmmZkAZpnMAGaZ/wBmzAAAZswzAGbMmQBmzMwAZsz/AGb/AABm/zMAZv+ZAGb/
        zADMAP8A/wDMAJmZAACZM5kAmQCZAJkAzACZAAAAmTMzAJkAZgCZM8wAmQD/AJlmAACZZjMAmTNmAJlm
        mQCZZswAmTP/AJmZMwCZmWYAmZmZAJmZzACZmf8AmcwAAJnMMwBmzGYAmcyZAJnMzACZzP8Amf8AAJn/
        MwCZzGYAmf+ZAJn/zACZ//8AzAAAAJkAMwDMAGYAzACZAMwAzACZMwAAzDMzAMwzZgDMM5kAzDPMAMwz
        /wDMZgAAzGYzAJlmZgDMZpkAzGbMAJlm/wDMmQAAzJkzAMyZZgDMmZkAzJnMAMyZ/wDMzAAAzMwzAMzM
        ZgDMzJkAzMzMAMzM/wDM/wAAzP8zAJn/ZgDM/5kAzP/MAMz//wDMADMA/wBmAP8AmQDMMwAA/zMzAP8z
        ZgD/M5kA/zPMAP8z/wD/ZgAA/2YzAMxmZgD/ZpkA/2bMAMxm/wD/mQAA/5kzAP+ZZgD/mZkA/5nMAP+Z
        /wD/zAAA/8wzAP/MZgD/zJkA/8zMAP/M/wD//zMAzP9mAP//mQD//8wAZmb/AGb/ZgBm//8A/2ZmAP9m
        /wD//2YAIQClAF9fXwB3d3cAhoaGAJaWlgDLy8sAsrKyANfX1wDd3d0A4+PjAOrq6gDx8fEA+Pj4APD7
        /wCkoKAAgICAAAAA/wAA/wAAAP//AP8AAAD/AP8A//8AAP///wAKCgoKCgoKCgoKCgoKCgoKCgoKCgoK
        CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKChoaGhoaGhoaGhoaGpmZ
        B5mTk5OTHO0cmQoKCgoKCgoKGhoaGhoaGhoaGhqZmZmTk5McHBzs6uscChoaCgoKCgobGhoaGhoaGhoa
        mZmZk5OTkxwc7BRE6u0KmRoKCgoKChsaGhoaGhoaGpmZmZmTkxwcHG1EROpt7AoKCgoKCgoKChoaGhoa
        GhoamZmZkxwcHOxtRETq6xPsCgoKCgoKCgoKGxoaGhoamZkHkxwcHOzqRETq7O3sFHMKk5kKCgoKCgoa
        GpmZmZmZHBwc7OvqEhJt7ffv9+oTcwqTmQoKCgoKChwcHBwcc+zsbRIS6utt6/fvB+/3FG1zCgoKCgoK
        CgoK7e3t7OttFBUTFBLs7Ovqbezv7+wU63MKCgoKCgoKCgrs7OtKFBTq7BPq6/fv7OzrEuv3FBJucwqZ
        mQoKCgoKCgrt60MQRO3sE+zs9+8VbesSQxQVSm5zCpmZCgoKCgoKCuvqEQwP6+wT6+zt9w4ObRIRDhRK
        cxwKCgoKCgoKCgoK6hEODA4U6xES6xL3QwxKExAPSm0ckwoKCgoKCgoKChIVEAwMDB0SERXq6m0SEAwM
        DCJEcxyTCpkaCgoKCgoVEA8ODAwMDCIVDhUVFQ8MDAwiQ24cHBwKmRoKCgoKCgoKFQ4MDAwKDBAQDg4M
        DAwMIkNtHBwcHAoKCgoKCgoKExUODAwMDAwMCgwMDAwKDiJDbhwcHBwcCgoKCgoKCgoTFRQiDgwMCgoM
        CgoMDg4PQ24cHBwcHBwKGhoKCgoKChUVExRDDgwMDA4MDA4OQxJzHBwcc3McHAoaGgoKCgoKCgoUExVD
        ECJDEBBDSkRzcxwcHHNzcxwcCgoKCgoKCgoKChQQEBQUbW1KbW5zbhwcHHNubm5zHJMKCgoKCgoKCgoU
        ShAQbW4cHG4Qcxxzc3Nzbm5ubnMcmQoaGgoKCgoKEwrqEBBzHJmTEBAQcxzsbm5tbm5zHJOZChoaCgoK
        CgoKCm0QEHOTmRAQ7BAQ7Oxu621ubnMcmRoKCgoKCgoKCgoT7BAQHByZEBDsEBDs7G5t625zHJkaGgoK
        CgoKCgoKChAQEBAQEOwQEOwQEOzs6+vrcxyZGhoaChsbCgoKCgoKEBAQEBAQbRAQ7BAQ7Ozs7ByTmRoa
        GhsKGxsKCgoKCgoK7Orr621tbuxu6+zs7BwcmRoaGhobGwoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoK
        CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKAAAAAAAAAAAAAAAAYAAAAGAA
        AAAAAAAACAAAAGgAAABoAAAACAAAAAgAAABoAAAAbAAAAAwAAAAMAAAAaAAAAGAAAAAMAAAAAAAAAGAA
        AABgAAAADAAAAAwAAABoAAAAZAAAAAwAAAAIAAAAaAAAAGgAAAAMAAAAAAAAAAAAAAAoAAAAIAAAAEAA
        AAABAAQAAAAAAAACAAAAAAAAAAAAABAAAAAQAAAAAAAAAAAAgAAAgAAAAICAAIAAAACAAIAAgIAAAMDA
        wACAgIAAAAD/AAD/AAAA//8A/wAAAP8A/wD//wAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAB3d3d3d3d3d3d3eHcAAAAAd3d3d3d3d3d3d4iHB3AAAPd3d3d3d3d3d3iBiAdwAAD3d3d3
        d3d3d3eBGIgAAAAAB3d3d3d3d3eIEYiIAAAAAA93d3d3d3eIEYiIiAdwAAAHd3d3d3iIiIh3eIgHcAAA
        B3d3iIiIiIh3d3iIAAAAAAiIiIgIiIiIiHeIiAAAAAAIiDiIiIh3iIiHiIgHcAAAAIgAGIiIdwiICAOI
        B3AAAACIAAiIiIcAiACDhwAAAAAAgAAIgIiHADgAOHcAAAAACAAAAIAIiIAAABh3B3AAAAAAAAAAAAAA
        AACHdwdwAAAAAAAAAAAAAAAId3cAAAAAgAAAAAAAAAAAh3d3AAAAAICAAAAAAAAACHd3dwdwAAAAiAAA
        AAAACId3iHcHcAAAAIgAAAAAMYh3eIh3AAAAAACDOIiDiIh3eIiIdwAAAAAIMAiHeAh4iIiIiHcHcAAA
        gIAId3AAh4iIiId3B3AAAACACHcAgAiIiIiHdwAAAAAIgAd3AIAIiIiId3cAAAAAAAAACACACIiIh3d3
        D/AAAAAAAAgAgAiIh3d3fw/wAAAAiIiIiIiIh3d3d/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAYAAAAGAAAAAAAAAACAAAAGgAAABoAAAACAAAAAgAAABoAAAAbAAAAAwA
        AAAMAAAAaAAAAGAAAAAMAAAAAAAAAGAAAABgAAAADAAAAAwAAABoAAAAZAAAAAwAAAAIAAAAaAAAAGgA
        AAAMAAAAAAAAAAAAAAAoAAAAEAAAACAAAAABAAQAAAAAAIAAAAAAAAAAAAAAABAAAAAQAAAAAAAAAAAA
        gAAAgAAAAICAAIAAAACAAIAAgIAAAMDAwACAgIAAAAD/AAD/AAAA//8A/wAAAP8A/wD//wAA////AAAA
        AAAAAAAAAAd3d3d3cAAAB3d3d3iAcAAHd3d3iIAAAAd3d4iHgHAACIgIiIiAAAAAAYh4gIBwAAAAiHCD
        cAAAAAAAAAhwcAAAAAAAB3AAAAAAAAh4cHAAADiIh4hwAAAAB3cIiHBwAAgHcICHcAAAAACAgHdw8AAA
        AAAAAAAAAAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAUAAAABAAAABAAAAAAAAAAEAAAAAQAAAAUAAAAAAA
        AABAAAAAAAAAAA==
</value>
  </data>
</root>